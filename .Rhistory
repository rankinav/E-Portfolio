(20+150+300)/4
qt(0.05, 3)
sqrt(0.02)
0.02*0.02
0.02/sqrt(10)
qt(0.975, 9, lower.tail=TRUE)
plots <- table(4,2)
plot <- 1:4
vol <- c(200,150,300,0)
id <- 1:4
vol <- c(200,150,300,0)
plots <- data.frame(id, vol)
View(plots)
t.test(plots$vol)
SE <- sd(plots$vol)/sqrt(4)
t_c <-   qt(0.05, 3)
y_bar <- mean(plots$vol)
lcl <- y_bar - (t_c * SE)
ucl <- y_bar + (t_c * SE)
t_c <-   qt(0.025, 3, lower.tail = FALSE)
lcl <- y_bar - (t_c * SE)
ucl <- y_bar + (t_c * SE)
SE <- sd(plots$vol)/sqrt(4)
View(plots)
SE <- sd(c(200,300,150,0))/sqrt(4)
t_c <- qt(0.025, 3, lower.tail = FALSE)
t_c <- qt(0.025, 3)
t_c <- qt(0.975, 3)
y_bar <- mean(plots$vol)
lcl <- y_bar - (t_c * SE)
ucl <- y_bar + (t_c * SE)
t_c <- qt(0.975, 3)
y_bar <- mean(plots$vol)
lcl <- y_bar - (t_c * SE)
ucl <- y_bar + (t_c * SE)
sd(plots$vol)
lcl <- y_bar - (t_c * SE)
ucl <- y_bar + (t_c * SE)
lcl
ucl
pt(7.40656079818, 18, lower.tail=FALSE)*2
pt(-31.6, 9, lower.tail = TRUE)*2
pt(52.06, 18, lower.tail=FALSE)*2
setwd("~/GEM521/Lab_6/L6_Data/Data")
arbutus <- read.table("arbutus.txt", sep = ",") %>% ##reads txt file
rename("wavelength" = "V1") %>% rename("g1_arbutus" = "V2") %>% ##renames columns to wavelength and group name
slice(-1) %>% ##removes first row containing title
mutate(wavelength = as.numeric(wavelength), ##converts both columns to numeric
g1_arbutus = as.numeric(g1_arbutus))
library(tidyverse)
arbutus <- read.table("arbutus.txt", sep = ",") %>% ##reads txt file
rename("wavelength" = "V1") %>% rename("g1_arbutus" = "V2") %>% ##renames columns to wavelength and group name
slice(-1) %>% ##removes first row containing title
mutate(wavelength = as.numeric(wavelength), ##converts both columns to numeric
g1_arbutus = as.numeric(g1_arbutus))
dead_maple <- read.table("dead_maple.txt", sep = ",") %>%
rename("wavelength" = "V1") %>% rename("g2_dead_maple" = "V2") %>%
slice(-1) %>%
mutate(wavelength = as.numeric(wavelength),
g2_dead_maple = as.numeric(g2_dead_maple))
fir <- read.table("fir.txt", sep = ",") %>%
rename("wavelength" = "V1") %>% rename("g3_fir" = "V2") %>%
slice(-1) %>%
mutate(wavelength = as.numeric(wavelength),
g3_fir = as.numeric(g3_fir))
rock <- read.table("rock.txt", sep = ",") %>%
rename("wavelength" = "V1") %>% rename("g4_rock" = "V2") %>%
slice(-1) %>%
mutate(wavelength = as.numeric(wavelength),
g4_rock = as.numeric(g4_rock))
soil <- read.table("soil.txt", sep = ",") %>%
rename("wavelength" = "V1") %>% rename("g5_soil" = "V2") %>%
slice(-1) %>%
mutate(wavelength = as.numeric(wavelength),
g5_soil = as.numeric(g5_soil))
spectra <- data.frame()
spectra <- left_join(arbutus, dead_maple, by = "wavelength") %>% ##nested join to combine each individual list into one
left_join(., fir, by = "wavelength") %>%
left_join(., rock, by = "wavelength") %>%
left_join(., soil, by = "wavelength") %>%
pivot_longer(., cols = c("g1_arbutus", "g2_dead_maple", "g3_fir", "g4_rock", "g5_soil")) ##pivots so each material is not its own column
ggplot(spectra, aes(x = wavelength, y = value, group = name)) +
geom_line(aes(colour = name)) +
scale_x_continuous(breaks=seq("300","2600",200)) +
theme_bw() +
theme(legend.position = "bottom") +
labs(x = "Wavelength (nm)",
y = "Reflectance",
color = "Material",
title = "Reflectance for five different materials")
pri <- function(material) { ##function to calculate PRI
material_pri <- material[material$wavelength==531 ##selects values for given index wavelengths
|material$wavelength==570,]
band1 <- material_pri[1,2]
band2 <- material_pri[2,2]
pri_value <- (band1 - band2)/(band1 + band2) ##calculates index from selected wavelengths
print(pri_value)
}
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band1 <- material_sipi[1,2]
band2 <- material_sipi[2,2]
band3 <- material_sipi[3,2]
sipi_value <- (band1 - band2)/(band1 - band3)
print(sipi_value)
}
nd705 <- function(material) {
material_nd705 <- material[material$wavelength==750
|material$wavelength==705,]
band1 <- material_nd705[1,2]
band2 <- material_nd705[2,2]
nd705_value <- (band1 - band2)/(band1 + band2)
print(nd705_value)
}
materials <- c("arbutus", "dead maple", "fir", "rock", "soil") ##list of material names
pri_value  <-  c(pri(arbutus), pri(dead_maple), pri(fir), pri(rock), pri(soil)) ##list of PRI values
sipi_value  <-  c(sipi(arbutus), sipi(dead_maple), sipi(fir), sipi(rock), sipi(soil)) ##list of SIPI values
nd705_value <-  c(nd705(arbutus), nd705(dead_maple), nd705(fir), nd705(rock), nd705(soil)) ##list of nd706 values
indices_table <- data.frame(materials, pri_value, sipi_value, nd705_value) ##combines all indices into dataframe
print(indices_table)
View(spectra)
spectra_mixed_wide <- pivot_wider(spectra_mixed)
spectra_mixed <- spectra %>%
pivot_wider() %>%
mutate(mixel_1 = (0.05*g1_arbutus) + ##performs calculations for mixed pixel
(0*g3_fir) + ##based on varying percentages of existing materials
(0.2*g2_dead_maple) +
(0.6*g5_soil) + ##60 percent soil,
(0.15*g4_rock), ##15 percent rock, etc
mixel_2 = (0.1*g1_arbutus) +
(0.1*g3_fir) +
(0.15*g2_dead_maple) +
(0.45*g5_soil) +
(0.2*g4_rock),
mixel_3 = (0.3*g1_arbutus) +
(0.1*g3_fir) +
(0.45*g2_dead_maple) +
(0.1*g5_soil) +
(0.05*g4_rock),
mixel_4 = (0.3*g1_arbutus) +
(0.3*g3_fir) +
(0.1*g2_dead_maple) +
(0.2*g5_soil) +
(0.1*g4_rock),
mixel_5 = (0.15*g1_arbutus) +
(0.8*g3_fir) +
(0* g2_dead_maple) +
(0.05*g5_soil) +
(0*g4_rock)
) %>%
subset(select=-c(g1_arbutus, g2_dead_maple, g3_fir, g4_rock, g5_soil)) %>% ##removes material columns
pivot_longer(cols = c("mixel_1", "mixel_2", "mixel_3", "mixel_4", "mixel_5")) ##pivots so mixed pixels are not each columns
spectra_mixed_plot <- spectra_mixed %>%
mutate(name = case_when(name == "mixel_1" ~ "Pixel 1 (5%)",
name == "mixel_2" ~ "Pixel 2 (20%)",
name == "mixel_3" ~ "Pixel 3 (40%)",
name == "mixel_4" ~ "Pixel 4 (60%)",
name == "mixel_5" ~ "Pixel 5 (95%)"))
ggplot(spectra_mixed_plot, aes(x = wavelength, y = value, group = name)) +
geom_line(aes(colour = name)) +
scale_x_continuous(breaks=seq("300","2600",200)) +
theme_bw() +
theme(legend.position = "bottom") +
labs(x = "Wavelength (nm)",
y = "Reflectance",
color = "Pixel % live vegetation",
title = "Reflectance for five mixed cover pixels with varying vegetation content")
spectra_mixed_wide <- pivot_wider(spectra_mixed)
landsat_band <- function(df, lwr, upr, centre) { ##function to calculate each landsat band value
df[df$wavelength>=lwr&df$wavelength<=upr,] %>% ##selects values between given lower and upper wavelengths
mutate(mixel_1 = mean(mixel_1), ##converts each pixel value to the mean of the chosen wavelengths
mixel_2 = mean(mixel_2),
mixel_3 = mean(mixel_3),
mixel_4 = mean(mixel_4),
mixel_5 = mean(mixel_5),
wavelength = centre) %>% ##converts wavelength value to the value of the centre of the band
slice(1) ##removes extraneous identical rows
}
landsat_b1 <- landsat_band(spectra_mixed_wide, 450, 520, 485) ##apply function for each band
landsat_b2 <- landsat_band(spectra_mixed_wide, 520, 600, 560)
landsat_b3 <- landsat_band(spectra_mixed_wide, 630, 690, 660)
landsat_b4 <- landsat_band(spectra_mixed_wide, 770, 900, 835)
landsat_b5 <- landsat_band(spectra_mixed_wide, 1550, 1750, 1650)
landsat_b7 <- landsat_band(spectra_mixed_wide, 2090, 2350, 2220)
landsat_all <- rbind(landsat_b1, landsat_b2, landsat_b3, landsat_b4, landsat_b5, landsat_b7) %>% ##combine all bands tables
rename("Pixel 1 (5%)" = mixel_1,
"Pixel 2 (20%)" = mixel_2,
"Pixel 3 (40%)" = mixel_3,
"Pixel 4 (60%)" = mixel_4,
"Pixel 5 (95%)" = mixel_5) %>%
pivot_longer(cols = c("Pixel 1 (5%)", "Pixel 2 (20%)", "Pixel 3 (40%)", "Pixel 4 (60%)", "Pixel 5 (95%)")) ##pivot so pixels are not each columns
View(landsat_b1)
sipi(arbutus)
nd705(arbutus)
nd705 <- function(material) {
material_nd705 <- material[material$wavelength==750
|material$wavelength==705,]
band1 <- material_nd705[1,2]
band2 <- material_nd705[2,2]
nd705_value <- (band1 - band2)/(band1 + band2)
print(c(band1, band2, nd705_value))
}
nd705(arbutus)
View(arbutus)
pri <- function(material) { ##function to calculate PRI
material_pri <- material[material$wavelength==531 ##selects values for given index wavelengths
|material$wavelength==570,]
band1 <- material_pri[1,2]
band2 <- material_pri[2,2]
pri_value <- (band1 - band2)/(band1 + band2) ##calculates index from selected wavelengths
print(c(material_pri, pri_value))
}
pri(arbutus)
print(c(material_nd705, nd705_value))
nd705 <- function(material) {
material_nd705 <- material[material$wavelength==750
|material$wavelength==705,]
band1 <- material_nd705[1,2]
band2 <- material_nd705[2,2]
nd705_value <- (band1 - band2)/(band1 + band2)
print(c(material_nd705, nd705_value))
}
nd705(arbutus)
nd705 <- function(material) {
material_nd705 <- material[material$wavelength==750
|material$wavelength==705,]
band1 <- material_nd705[1,2]
band2 <- material_nd705[2,2]
nd705_value <- (band2 - band1)/(band2 + band1)
print(nd705_value)
}
nd705_value <-  c(nd705(arbutus), nd705(dead_maple), nd705(fir), nd705(rock), nd705(soil)) ##list of nd706 values
indices_table <- data.frame(materials, pri_value, sipi_value, nd705_value) ##combines all indices into dataframe
print(indices_table)
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band800 <- material_sipi[1,2]
band445 <- material_sipi[2,2]
band680 <- material_sipi[3,2]
sipi_value <- (band800 - band445)/(band800 - band680)
print(sipi_value)
}
sipi(arbutus
sipi(arbutus)
sipi(arbutus)
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band800 <- material_sipi[1,2]
band445 <- material_sipi[2,2]
band680 <- material_sipi[3,2]
sipi_value <- (band800 - band445)/(band800 - band680)
print(band800)
}
sipi(arbutus)
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band800 <- material_sipi[3,2]
band445 <- material_sipi[2,2]
band680 <- material_sipi[1,2]
sipi_value <- (band800 - band445)/(band800 - band680)
print(band800)
}
print(band800)
sipi(arbutus)
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band800 <- material_sipi[3,2]
band445 <- material_sipi[2,2]
band680 <- material_sipi[1,2]
sipi_value <- (band800 - band445)/(band800 - band680)
print(sipi_value)
}
materials <- c("arbutus", "dead maple", "fir", "rock", "soil") ##list of material names
pri_value  <-  c(pri(arbutus), pri(dead_maple), pri(fir), pri(rock), pri(soil)) ##list of PRI values
sipi_value  <-  c(sipi(arbutus), sipi(dead_maple), sipi(fir), sipi(rock), sipi(soil)) ##list of SIPI values
nd705_value <-  c(nd705(arbutus), nd705(dead_maple), nd705(fir), nd705(rock), nd705(soil)) ##list of nd706 values
indices_table <- data.frame(materials, pri_value, sipi_value, nd705_value) ##combines all indices into dataframe
print(indices_table)
indices_table <- data.frame(materials, pri_value, sipi_value, nd705_value) ##combines all indices into dataframe
print(indices_table)
pri <- function(material) { ##function to calculate PRI
material_pri <- material[material$wavelength==531 ##selects values for given index wavelengths
|material$wavelength==570,]
band531 <- material_pri[1,2]
band570 <- material_pri[2,2]
pri_value <- (band531 - band570)/(band531 + band570) ##calculates index from selected wavelengths
print(c(material_pri, pri_value))
}
pri(arbutus)
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band800 <- material_sipi[3,2]
band445 <- material_sipi[2,2]
band680 <- material_sipi[1,2]
sipi_value <- (band800 - band445)/(band800 - band680)
print(c(material_sipi, sipi_value))
}
sipi(arbutus)
```{r indices for each material}
materials <- c("arbutus", "dead maple", "fir", "rock", "soil") ##list of material names
pri_value  <-  c(pri(arbutus), pri(dead_maple), pri(fir), pri(rock), pri(soil)) ##list of PRI values
sipi_value  <-  c(sipi(arbutus), sipi(dead_maple), sipi(fir), sipi(rock), sipi(soil)) ##list of SIPI values
nd705_value <-  c(nd705(arbutus), nd705(dead_maple), nd705(fir), nd705(rock), nd705(soil)) ##list of nd706 values
indices_table <- data.frame(materials, pri_value, sipi_value, nd705_value) ##combines all indices into dataframe
print(indices_table)
View(spectra_mixed)
sipi(arbutus)
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band800 <- material_sipi[3,2]
band445 <- material_sipi[2,2]
band680 <- material_sipi[1,2]
sipi_value <- (band800 - band445)/(band800 - band680)
print(c(band800, band445, band680,  sipi_value))
}
sipi(arbutus)
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band800 <- material_sipi[3,2]
band680 <- material_sipi[2,2]
band445 <- material_sipi[1,2]
sipi_value <- (band800 - band445)/(band800 - band680)
print(c(band800, band445, band680,  sipi_value))
}
sipi(arbutus)
pri <- function(material) { ##function to calculate PRI
material_pri <- material[material$wavelength==531 ##selects values for given index wavelengths
|material$wavelength==570,]
band531 <- material_pri[1,2]
band570 <- material_pri[2,2]
pri_value <- (band531 - band570)/(band531 + band570) ##calculates index from selected wavelengths
print(pri_value)
}
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band800 <- material_sipi[3,2]
band680 <- material_sipi[2,2]
band445 <- material_sipi[1,2]
sipi_value <- (band800 - band445)/(band800 - band680)
print(sipi_value)
}
nd705 <- function(material) {
material_nd705 <- material[material$wavelength==750
|material$wavelength==705,]
band1 <- material_nd705[1,2]
band2 <- material_nd705[2,2]
nd705_value <- (band2 - band1)/(band2 + band1)
print(nd705_value)
}
pri <- function(material) { ##function to calculate PRI
material_pri <- material[material$wavelength==531 ##selects values for given index wavelengths
|material$wavelength==570,]
band531 <- material_pri[1,2]
band570 <- material_pri[2,2]
pri_value <- (band531 - band570)/(band531 + band570) ##calculates index from selected wavelengths
print(pri_value)
}
sipi <- function(material) {
material_sipi <- material[material$wavelength==800
|material$wavelength==445
|material$wavelength==680,]
band800 <- material_sipi[3,2]
band680 <- material_sipi[2,2]
band445 <- material_sipi[1,2]
sipi_value <- (band800 - band445)/(band800 - band680)
print(sipi_value)
}
nd705 <- function(material) {
material_nd705 <- material[material$wavelength==750
|material$wavelength==705,]
band1 <- material_nd705[1,2]
band2 <- material_nd705[2,2]
nd705_value <- (band2 - band1)/(band2 + band1)
print(nd705_value)
}
materials <- c("arbutus", "dead maple", "fir", "rock", "soil") ##list of material names
pri_value  <-  c(pri(arbutus), pri(dead_maple), pri(fir), pri(rock), pri(soil)) ##list of PRI values
sipi_value  <-  c(sipi(arbutus), sipi(dead_maple), sipi(fir), sipi(rock), sipi(soil)) ##list of SIPI values
nd705_value <-  c(nd705(arbutus), nd705(dead_maple), nd705(fir), nd705(rock), nd705(soil)) ##list of nd706 values
indices_table <- data.frame(materials, pri_value, sipi_value, nd705_value) ##combines all indices into dataframe
print(indices_table)
View(spectra_mixed_wide)
landsat_all_wide <- pivot_wider(landsat_all)
ndvi_list <- data.frame(matrix(ncol = 1, nrow = 0))
colnames(ndvi_list) <- "NDVI"
ndwi_list <- data.frame(matrix(ncol = 1, nrow = 0))
colnames(ndwi_list) <- "NDWI"
for (n in 1:5) {
red <- landsat_all_wide[landsat_all_wide$wavelength==660,]
nir <- landsat_all_wide[landsat_all_wide$wavelength==835,]
swir <- landsat_all_wide[landsat_all_wide$wavelength==2220,]
ndvi_value <- (nir[1,n+1] - red[1,n+1])/(nir[1,n+1] + red[1,n+1])
ndvi_list[n,1] <- rbind(ndvi_value)
ndwi_value <- (nir[1,n+1] - swir[1,n+1])/(nir[1,n+1] + swir[1,n+1])
ndwi_list[n,1] <- rbind(ndwi_value)
}
ndvi_list <- cbind(ndvi_list, percent_cover = c(5,20,40,60,95))
ndwi_list <- cbind(ndwi_list, percent_cover = c(5,20,40,60,95))
View(ndwi_list)
View(ndwi_list)
View(ndvi_list)
View(ndvi_list)
View(red)
View(nir)
View(swir)
View(spectra_mixed)
View(ndvi_list)
View(landsat_all)
View(spectra_mixed_wide)
View(ndwi_list)
View(spectra_mixed_wide)
library(dplyr); library(leaflet); library(raster)
land_cover <- rast("C:\Users\rankinai.stu\OneDrive - UBC\Documents\GitHub\E-Portfolio-sample\images\campus_classified.tif")
land_cover <- rast("C:/Users/rankinai.stu/OneDrive - UBC/Documents/GitHub/E-Portfolio-sample/images/campus_classified.tif")
land_cover <- rast("C:/Users/rankinai.stu/OneDrive - UBC/Documents/GitHub/E-Portfolio-sample/images/campus_classified.tif")
setwd("~/GitHub/E-Portfolio-sample")
land_cover <- rast("C:/Users/rankinai.stu/OneDrive - UBC/Documents/GitHub/E-Portfolio-sample/images/campus_classified.tif")
library(dplyr); library(leaflet); library(terra)
land_cover <- rast("C:/Users/rankinai.stu/OneDrive - UBC/Documents/GitHub/E-Portfolio-sample/images/campus_classified.tif")
m <- leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldImagery") %>%
addRasterImage(land) %>%
addScaleBar(position = c("bottomleft"))
library(dplyr); library(leaflet); library(terra)
land_cover <- rast("C:/Users/rankinai.stu/OneDrive - UBC/Documents/GitHub/E-Portfolio-sample/images/campus_classified.tif")
m <- leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldImagery") %>%
addRasterImage(land_cover) %>%
addScaleBar(position = c("bottomleft"))
m <- leaflet(width = "100%") %>%
addProviderTiles("Esri.WorldImagery") %>%
addRasterImage(land_cover, maxBytes = 10 * 2048 *2048) %>%
addScaleBar(position = c("bottomleft"))
