---
title: "Capstone project"
format: html
editor: visual
---

# Modelling ecological connectivity on the UBC campus

Capstone project for the MGEM program. This study investigates sites of overlap between human and wildlife movement across the UBC Vancouver campus to identify and avoid human-wildlife conflict. First, Planet SkySat satellite imagery and public LiDAR data are utilized to create classified land cover maps of the campus. These classified land cover rasters are then used as resistance surfaces for omnidirectional circuit-based connectivity modelling to understand how humans and wildlife move across campus. Finally, human and wildlife connectivity are compared to identify sites of overlap.

## Classified land cover

![](images/classified.png)

Land cover on campus was classified using random forests in Python, from Planet SkySat satellite imagery and Vancouver public LiDAR.

![](images/feature_importance.png)

The most important features in training the random forests classifier were the normalized difference vegetation index, a measure of vegetation derived from the red and near-infrared bands of the imagery, and the digital surface model, an elevation model of surface features derived from LiDAR.

## Connectivity modelling

![](images/ecological_connectivity.png)

From the classified land cover map, human pedestrian and wildlife connectivity models were run and typical connectivity maps were created. Above is the mean connectivity values per 0.5x0.5 metre cell, calculated from combining connectivity model outputs for five different test species. Species resistance values per land cover class were reclassified according to the table below, where each value represents the relative resistance or difficulty each species has in moving through a cell of the associated land cover type.

| Species | Forest | Low veg | Grass | Barren | Water | Artificial turf | Asphalt | Building | Shadow |
|--------|--------|--------|--------|--------|--------|--------|--------|--------|--------|
| Human pedestrian | 60 | 70 | 20 | 20 | 100 | 30 | 1 | 30 | 15 |
| Pacific treefrog | 10 | 10 | 30 | 30 | 1 | 50 | 70 | 100 | 85 |
| Little brown bat | 1 | 1 | 10 | 1 | 1 | 60 | 80 | 60 | 70 |
| Band-tailed pigeon | 1 | 1 | 1 | 1 | 1 | 30 | 30 | 80 | 65 |
| Grey squirrel | 1 | 10 | 10 | 10 | 100 | 30 | 50 | 90 | 70 |
| Coyote | 10 | 10 | 10 | 10 | 100 | 60 | 30 | 100 | 70 |

## Mapping conflict

![](images/conflict.png)

By overlaying connectivity models and incorporating other known conflict factors like traffic volume, it is possible to predict where humans and wildlife movement currently overlaps. Conflict between humans and wildlife follows closely the maps of human pedestrian and vehicle traffic volume, and the top sites of potential conflict are at the edges of campus green spaces and along roads where wildlife movement is forced across more costly land cover types that humans occupy.

## Additional code

Python Arcpy cursor used to generate building capacity numbers based on building code limits to estimate human presence numbers within each building on campus.

``` python
##checks if there is already a field for building capacity created
if "capacity" not in [f.name for f in arcpy.ListFields("buildings_clipped")]:
  
    ##creates new field in attribute table
    arcpy.management.AddField(in_table="buildings_clipped",
                              field_name="capacity", 
                              field_type="FLOAT")

##creating update cursor for buildings_clipped feature, looking at four specific fields
with arcpy.da.UpdateCursor("buildings_clipped", field_names=["Shape_Area", "bldg_usage", "max_floors", "capacity"]) as cursor:
  
    ##for every row, if the row has a building area value, then the building max capacity is added to the new field
    for row in cursor:
        if row[0] is not None:
            ##max capacity is building area * number of floors * 0.4 people per m^2
            row[3] = row[0] * row[2] * 0.4 
        else:
            pass
        cursor.updateRow(row)
```

Configuration file for running Omniscape connectivity model in Julia, with coyote species-specific parameters.

``` julia
resistance_file = C:/Users/ranki/Documents/Grad/FCOR599/campus_resample_v2.tif
radius = 100
block_size = 21
project_name = C:/Users/ranki/Documents/Grad/FCOR599/coyote_config/coyote_test

source_from_resistance = true
r_cutoff = 30
reclassify_resistance = true
reclass_table = C:/Users/ranki/Documents/Grad/FCOR599/coyote_config/coyote_reclass_table.txt
calc_normalized_current = true

precision = single
solver = cholmod
```
